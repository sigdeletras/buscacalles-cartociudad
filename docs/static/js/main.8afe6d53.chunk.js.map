{"version":3,"sources":["components/Header/Header.jsx","services/getCandidates.js","components/Card/Card.jsx","components/Candidates/Candidates.jsx","components/InfoBlocks/InfoBlocks.jsx","components/Information/Information.jsx","components/SearchTools/SearchTools.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","CARTOCIUDADAPIURL","address","a","noprocess","fetchJsonp","then","res","json","response","Array","isArray","Card","data","item","postalcode","postalCode","type","province","stateMsg","Candidates","candidates","length","map","candidate","id","InfoBlocks","class","Information","candidatesData","useState","resultados","setResultados","resultadosFilter","setResultadosFilter","filterState","setFilterState","useEffect","provincesSummary","forEach","el","handleTagClick","event","tagValue","target","value","filter","document","querySelectorAll","tag","querySelector","onClick","Object","entries","sort","key","SearchTools","address_text","filter_option","params","setParams","checked","setChecked","setCandidates","useRef","noaddress_option","all_option","getCandidates","handleOptionChange","name","ref","placeholder","onChange","defaultChecked","for","current","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8afe6d53.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"nav\">\r\n        <a className=\"active\" href=\"http://www.sigdeletras.com\">\r\n          SIGdeletras\r\n        </a>\r\n        <div className=\"nav__infolinks\">\r\n          <a href=\"#search_tools_section\">Buscador</a>\r\n          <a href=\"#about\">Info</a>\r\n          <a href=\"https://github.com/sigdeletras/buscacalles-cartociudad\">GitHub</a>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import fetchJsonp from \"fetch-jsonp\";\r\n\r\nconst CARTOCIUDADAPIURL = \"http://www.cartociudad.es/geocoder/api/geocoder\";\r\n\r\nexport async function getCandidates(address, noprocess = \"\") {\r\n  return await fetchJsonp(\r\n    `${CARTOCIUDADAPIURL}/candidatesJsonp?q=${address}&no_process=${noprocess}` // &limit=30\r\n  )\r\n    .then((res) => res.json())\r\n    .then((response) => {\r\n      if (Array.isArray(response)) {\r\n        const apiGeocodersData = response;\r\n        return apiGeocodersData;\r\n      }\r\n    });\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (data) => {\r\n  const item = data.data;\r\n  const postalcode = item.postalCode ? `CP ` + item.postalCode : ``;\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <p className=\"card__title\">{item.address}</p>\r\n      <div className=\"card__info\">\r\n\r\n        <p className=\"card__info--city\">Tipo {item.type}</p>\r\n        <p className=\"card__info--city\">{postalcode ? (postalcode + ` ` + item.province) : item.province}</p>\r\n        <p className=\"card__info--message\">\r\n          {item.stateMsg}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport \"./Candidates.css\";\r\n\r\nconst Candidates = (data) => {\r\n\r\n  const candidates = data.data;\r\n  \r\n  return (\r\n    <section className=\"candidates\">\r\n      {candidates.length > 0 ? (\r\n        candidates.map((candidate) => (\r\n          <Card key={candidate.id} data={candidate}></Card>\r\n        ))\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Candidates;\r\n","import \"./InfoBlocks.css\";\r\n\r\nconst InfoBlocks = () => {\r\n\r\n    return (\r\n        <div className='infoblocks'>\r\n            <div className='infoblocks__block'>\r\n                <p><i class=\"infoblocks__block--icon zmdi zmdi-search zmdi-hc-3x\" /></p>\r\n                <h2>Búsqueda</h2>\r\n                <p>Introduce un texto de búsqueda para ver las calles, topónimos y localidades</p>\r\n            </div>\r\n            <div className='infoblocks__block'>\r\n                <p><i class=\"infoblocks__block--icon zmdi zmdi-filter-list zmdi-hc-3x\" /></p>\r\n                <h2>Filtro</h2>\r\n                <p>Puedes ver todas las coincidencias o filtrar solo los datos del callejero</p>\r\n            </div>\r\n            <div className='infoblocks__block'>\r\n                <p><i class=\"infoblocks__block--icon zmdi zmdi-filter-center-focus zmdi-hc-3x\" /></p>\r\n                <h2>Consulta</h2>\r\n                <p>Consulta los resultados por municipios de España</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default InfoBlocks;","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport \"./Information.css\";\r\n\r\nimport Candidates from \"../Candidates/Candidates\";\r\nimport InfoBlocks from \"../InfoBlocks/InfoBlocks\";\r\n\r\nconst Information = (data) => {\r\n\r\n  const candidatesData = data.data;\r\n\r\n  const [resultados, setResultados] = useState([]);\r\n  const [resultadosFilter, setResultadosFilter] = useState([]);\r\n  const [filterState, setFilterState] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setResultados(candidatesData);\r\n  }, [candidatesData]);\r\n\r\n  const provincesSummary = {};\r\n\r\n  resultados.forEach((el) => {\r\n    provincesSummary[el.province] = (provincesSummary[el.province] || 0) + 1;\r\n  });\r\n\r\n  const handleTagClick = (event) => {\r\n    let tagValue = event.target.value;\r\n\r\n    if (tagValue === \"all\") {\r\n      setFilterState(true);\r\n    } else {\r\n      let resultadosFilter = resultados.filter(\r\n        (resultados) => resultados.province === tagValue\r\n      );\r\n      setResultadosFilter(resultadosFilter);\r\n      setFilterState(false);\r\n    }\r\n\r\n    let allTagBt = document.querySelectorAll(`[class=\"tag tag--select\"]`);\r\n    allTagBt.forEach(function (tag) {\r\n      tag.className = \"tag\";\r\n    });\r\n\r\n    let selectTagBt = document.querySelector(`[value=\"${tagValue}\"]`);\r\n    selectTagBt.className = \"tag tag--select\";\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className=\"information\">\r\n          {Array.isArray(resultados) && resultados.length ? (\r\n            <div>\r\n              <button\r\n                className=\"tag tag--select\"\r\n                value=\"all\"\r\n                onClick={handleTagClick}\r\n              >\r\n                TODOS {resultados.length}\r\n              </button>\r\n              {Object.entries(provincesSummary)\r\n                .sort()\r\n                .map(([key, value]) => (\r\n                  <button\r\n                    className=\"tag\"\r\n                    value={key}\r\n                    onClick={handleTagClick}\r\n                  >\r\n                    {key} {value}\r\n                  </button>\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            <InfoBlocks></InfoBlocks>\r\n              \r\n            )}\r\n      </section>\r\n\r\n      <Candidates\r\n        data={filterState ? resultados : resultadosFilter}\r\n      ></Candidates>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","import React, { Fragment, useState, useEffect, useRef } from \"react\";\r\n\r\nimport \"./SearchTools.css\";\r\n\r\nimport { getCandidates } from \"../../services/getCandidates\";\r\n\r\nimport Information from \"../Information/Information\";\r\n\r\n\r\nconst SearchTools = () => {\r\n\r\n  const [params, setParams] = useState({\r\n    address_text: \"\",\r\n    filter_option: \"\"\r\n  })\r\n  const [checked, setChecked] = useState(true);\r\n  const [candidates, setCandidates] = useState([]);\r\n\r\n  const address_text = useRef();\r\n  const noaddress_option = useRef();\r\n  const all_option = useRef();\r\n\r\n  useEffect(() => {\r\n    \r\n    getCandidates(params.address_text, params.filter_option).then((candidates) =>\r\n      setCandidates(candidates)\r\n    );\r\n  }, [params.address_text, params.filter_option]);\r\n\r\n  const handleInputChange = (event) => {\r\n    let len = event.target.value.length\r\n    if (len > 2) {\r\n      setParams({\r\n        ...params,\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOptionChange = (event) => {\r\n    setParams({\r\n      ...params,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    setChecked(true)\r\n  };\r\n\r\n  const handleCleanButtonClick = () => {\r\n    setParams({\r\n      address_text: \"\",\r\n      filter_option: \"\"\r\n    });\r\n    address_text.current.value = ''\r\n    all_option.current.checked = true\r\n    noaddress_option.current.checked = false\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <section id=\"search_tools_section\" className=\"search_tools\">\r\n        <div className=\"margin\">\r\n          <h1 className=\"candidates__title\">BuscaCalles</h1>\r\n          <h2 className=\"candidates__subtitle\">Localiza las direcciones postales de España</h2>\r\n          <h2 className=\"candidates__subtitle\">usando los datos de CartoCiudad</h2>\r\n        </div>\r\n        <div className=\"margin\">\r\n          <input\r\n            ref={address_text}\r\n            type=\"text\"\r\n            name=\"address_text\"\r\n            placeholder=\"Escribe el texto de búsqueda...\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"margin search_tools_section--filter_option\" >\r\n          <div><input type=\"radio\" ref={all_option} id=\"all\" name=\"filter_option\" value=\"\"\r\n            onClick={handleOptionChange} defaultChecked={checked}\r\n          />\r\n            <label for=\"all\"> Completo</label></div>\r\n          <div><input type=\"radio\" ref={noaddress_option} id=\"callejero\" name=\"filter_option\"\r\n            value=\"municipio,poblacion,toponimo\" onClick={handleOptionChange} defaultChecked={!checked} />\r\n            <label for=\"all\"> Solo callejero</label></div>\r\n        </div>\r\n        <div className=\"margin\">\r\n          {/* <button className=\"btn\">Buscar</button> */}\r\n          <button className=\"btn\" onClick={handleCleanButtonClick} >Limpiar</button>\r\n        </div>\r\n      </section>\r\n      <Information data={candidates}></Information>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchTools;\r\n","import Header from \"./components/Header/Header\";\nimport SearchTools from \"./components/SearchTools/SearchTools\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Header></Header>\n      <SearchTools></SearchTools>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}